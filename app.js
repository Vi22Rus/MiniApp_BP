// –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞: app.js v1.2.0 (150 —Å—Ç—Ä–æ–∫)

// –î–æ–º (Club Royal)
const homeCoords = { lat:12.96933724471163, lng:100.88800963156544 };

// –ú–µ—Å—Ç–∞ –¥–ª—è –¥–æ—Å—É–≥–∞
const kidsLeisure = [
  { name:'Mini Siam', date:'01.01.2026', coords:{lat:12.955415713554308,lng:100.90885349381693}, tips:'–ü–∞—Ä–∫ –º–∏–Ω–∏–∞—Ç—é—Ä –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º, –≤–æ–∑—å–º–∏—Ç–µ –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä.', type:'sight' },
  { name:'–î–µ—Ä–µ–≤–Ω—è —Å–ª–æ–Ω–æ–≤', date:'04.01.2026', coords:{lat:12.916042985773633,lng:100.93883440612971}, tips:'–ö–æ—Ä–º–ª–µ–Ω–∏–µ —Å–ª–æ–Ω–æ–≤ –∏ –∫–∞—Ç–∞–Ω–∏–µ –Ω–∞ –Ω–∏—Ö. –®–æ—É —Å–ª–æ–Ω–æ–≤ (14:30‚Äì16:00).', type:'sight' },
  { name:'–î–µ–ª—å—Ñ–∏–Ω–∞—Ä–∏—É–º', date:'07.01.2026', coords:{lat:12.952221913414467,lng:100.93617556805272}, tips:'–®–æ—É –¥–µ–ª—å—Ñ–∏–Ω–æ–≤ –≤ 15:00. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ 15 –º–∏–Ω –¥–æ –Ω–∞—á–∞–ª–∞.', type:'sight' },
  { name:'–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á', date:'11.01.2026', coords:{lat:12.76575857856688,lng:100.93505629196102}, tips:'–ù–∞–π–¥–∏—Ç–µ —à–æ—É —Å–ª–æ–Ω–æ–≤ –∏ —Å–∞–¥ —Ä–∞–Ω–æ —É—Ç—Ä–æ–º.', type:'sight' },
  { name:'–ú—É–∑–µ–π –∏—Å–∫—É—Å—Å—Ç–≤ 3D', date:'13.01.2026', coords:{lat:12.948323220229895,lng:100.88976287787469}, tips:'–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ç–æ–∑–æ–Ω—ã.', type:'sight' },
  { name:'–ê—é—Ç—Ç–∞–π—è', date:'16.01.2026', coords:{lat:14.357419046191445,lng:100.5675751166289}, tips:'–ü–æ—Å–µ—Ç–∏—Ç–µ —Ö—Ä–∞–º—ã.', type:'sight' },
  { name:'–ó–æ–æ–ø–∞—Ä–∫ –ö—Ö–∞–æ –ö—Ö–µ–æ', date:'19.01.2026', coords:{lat:13.21500643700206,lng:101.0570009938234}, tips:'–ö–æ—Ä–º–ª–µ–Ω–∏–µ –∂–∏—Ä–∞—Ñ–æ–≤ –≤ 15:00.', type:'sight' },
  { name:'–ü–ª–∞–≤—É—á–∏–π —Ä—ã–Ω–æ–∫', date:'22.01.2026', coords:{lat:12.867993764217232,lng:100.90469403957914}, tips:'–§—Ä—É–∫—Ç—ã —É –ª–æ–¥–æ—á–Ω–∏–∫–æ–≤.', type:'sight' }
];

// –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userCoords = null;

// Haversine
function getDistance([lat1,lon1],[lat2,lon2]) {
  const toRad = d=>d*Math.PI/180;
  const R=6371;
  const dLat=toRad(lat2-lat1), dLon=toRad(lon2-lon1);
  const a=Math.sin(dLat/2)**2 + Math.cos(toRad(lat1))*Math.cos(toRad(lat2))*Math.sin(dLon/2)**2;
  return (R*2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a))).toFixed(1);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
document.getElementById('locateBtn').addEventListener('click',()=>{
  if(!navigator.geolocation){ alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'); return; }
  navigator.geolocation.getCurrentPosition(pos=>{
    userCoords=[pos.coords.latitude,pos.coords.longitude];
    alert(`–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${userCoords[0].toFixed(5)}, ${userCoords[1].toFixed(5)}`);
    renderActivities(activities);
  },()=>alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'));
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª—è–∂–Ω—ã—Ö –¥–Ω–µ–π
function generateBeachDays(){
  const used=kidsLeisure.map(x=>x.date), days=[];
  const start=new Date('2025-12-29'), end=new Date('2026-01-26');
  for(let d=new Date(start); d<=end; d.setDate(d.getDate()+1)){
    const date=d.toLocaleDateString('ru-RU');
    if(!used.includes(date)){
      days.push({ type:'sea', name:'–ü–ª—è–∂–∏–Ω–≥ –∏ –ü—Ä–æ–≥—É–ª–∏–Ω–≥', date, coords:null, tips:'–û—Ç–¥—ã—Ö –Ω–∞ –ø–ª—è–∂–µ –∏ –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –Ω–∞–±–µ—Ä–µ–∂–Ω–æ–π –ù–∞–∫–ª—É–∞.' });
    }
  }
  return days;
}

const activities=[...generateBeachDays(),...kidsLeisure].sort((a,b)=>{
  const da=a.date.split('.').reverse().join('-'), db=b.date.split('.').reverse().join('-');
  return new Date(da)-new Date(db);
});

// –°—á—ë—Ç—á–∏–∫
const startTrip=new Date('2025-12-29'), endTrip=new Date('2026-01-26');
function updateCountdown(){
  const now=new Date();
  const label=now<startTrip?'–î–æ –ø–æ–µ–∑–¥–∫–∏:':now<=endTrip?'–î–æ –æ—Ç—ä–µ–∑–¥–∞:':'–ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!';
  const days= now<startTrip?Math.ceil((startTrip-now)/864e5)
            : now<=endTrip?Math.ceil((endTrip-now)/864e5):0;
  document.getElementById('countdownText').textContent=label;
  document.getElementById('days').textContent=days>0?days:'‚úî';
}

// –ü—Ä–∏–≤—è–∑–∫–∞ –¥–µ—Ç–∞–ª–µ–π
function bindDetailButtons(){
  document.querySelectorAll('.details').forEach(btn=>{
    btn.onclick=()=>{
      const act=activities.find(x=>x.name===btn.dataset.name&&x.date===btn.dataset.date);
      showModal(act);
    };
  });
}

// –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫
function renderActivities(list){
  const grid=document.getElementById('activitiesGrid');
  grid.innerHTML=list.map(a=>{
    let icon='';
    switch(a.type){
      case 'sight':
        if(a.name==='Mini Siam') icon='üèõÔ∏è ';
        else if(a.name==='–î–µ—Ä–µ–≤–Ω—è —Å–ª–æ–Ω–æ–≤') icon='üêò ';
        else if(a.name==='–î–µ–ª—å—Ñ–∏–Ω–∞—Ä–∏—É–º') icon='üê¨ ';
        else if(a.name==='–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á') icon='üå∫ ';
        else if(a.name==='–ú—É–∑–µ–π –∏—Å–∫—É—Å—Å—Ç–≤ 3D') icon='üé® ';
        else if(a.name==='–ê—é—Ç—Ç–∞–π—è') icon='‚õ©Ô∏è ';
        else if(a.name==='–ó–æ–æ–ø–∞—Ä–∫ –ö—Ö–∞–æ –ö—Ö–µ–æ') icon='ü¶í ';
        else if(a.name==='–ü–ª–∞–≤—É—á–∏–π —Ä—ã–Ω–æ–∫') icon='üõ∂ ';
        break;
      case 'sea': icon='üèñÔ∏è '; break;
    }
    let priceLine='';
    switch(a.name){
      case 'Mini Siam': priceLine='<p class="price-tag">230‡∏ø/130‡∏ø</p>'; break;
      case '–î–µ—Ä–µ–≤–Ω—è —Å–ª–æ–Ω–æ–≤': priceLine='<p class="price-tag">650‡∏ø/500‡∏ø</p>'; break;
      case '–î–µ–ª—å—Ñ–∏–Ω–∞—Ä–∏—É–º': priceLine='<p class="price-tag">630‡∏ø/450‡∏ø</p>'; break;
      case '–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á': priceLine='<p class="price-tag">420‡∏ø/320‡∏ø</p>'; break;
      case '–ú—É–∑–µ–π –∏—Å–∫—É—Å—Å—Ç–≤ 3D': priceLine='<p class="price-tag">235‡∏ø/180‡∏ø</p>'; break;
      case '–ó–æ–æ–ø–∞—Ä–∫ –ö—Ö–∞–æ –ö—Ö–µ–æ': priceLine='<p class="price-tag">350‡∏ø/120‡∏ø</p>'; break;
    }
    const dist=(userCoords&&a.coords)?`<p class="distance-tag">‚âà${getDistance(userCoords,[a.coords.lat,a.coords.lng])} –∫–º</p>`:'';
    return `
      <div class="card ${a.type}">
        <h3>${icon}${a.name}</h3>
        <p>${a.date}</p>
        ${priceLine}
        ${dist}
        <button data-name="${a.name}" data-date="${a.date}" class="details">‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
      </div>`;
  }).join('');
  bindDetailButtons();
}

// –ú–æ–¥–∞–ª–∫–∞
function showModal(a){
  let content=`<h2>${a.name}</h2><p>${a.date}</p>`;
  if(a.coords){
    const from=`${homeCoords.lat},${homeCoords.lng}`, to=`${a.coords.lat},${a.coords.lng}`;
    content+=`<p>üó∫Ô∏è <a href="https://www.google.com/maps/dir/${from}/${to}" target="_blank">–ú–∞—Ä—à—Ä—É—Ç</a></p>`;
  }
  content+=`<p>üí° –°–æ–≤–µ—Ç: ${a.tips}</p>`;
  document.getElementById('modalBody').innerHTML=content;
  document.getElementById('modalOverlay').classList.add('active');
}

// –í–∫–ª–∞–¥–∫–∏
function initTabs(){
  document.querySelectorAll('.tab-button').forEach(btn=>{
    btn.addEventListener('click',()=>{
      document.querySelectorAll('.tab-button').forEach(b=>b.classList.remove('active'));
      document.querySelectorAll('.tab-content').forEach(c=>c.classList.remove('active'));
      btn.classList.add('active');
      document.getElementById(btn.dataset.tab).classList.add('active');
    });
  });
}

// –§–∏–ª—å—Ç—Ä—ã
function initFilters(){
  document.querySelectorAll('.filter-btn').forEach(f=>{
    f.addEventListener('click',()=>{
      document.querySelectorAll('.filter-btn').forEach(x=>x.classList.remove('active'));
      f.classList.add('active');
      const filtered=f.dataset.filter==='all'?activities:activities.filter(a=>a.type===f.dataset.filter);
      renderActivities(filtered);
      localStorage.setItem('filter',f.dataset.filter);
    });
  });
  document.querySelector(`.filter-btn[data-filter="${localStorage.getItem('filter')||'all'}"]`)?.click();
}

function closeModal(){
  document.getElementById('modalOverlay').classList.remove('active');
}

document.addEventListener('DOMContentLoaded',()=>{
  updateCountdown();
  setInterval(updateCountdown,3600000);
  initTabs();
  initFilters();
  renderActivities(activities);
  document.getElementById('closeModal').addEventListener('click',closeModal);
  document.getElementById('modalOverlay').addEventListener('click',e=>{ if(e.target.id==='modalOverlay') closeModal(); });
});
