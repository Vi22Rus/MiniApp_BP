const homeCoords = { lat:12.96933724471163, lng:100.88800963156544 };

const kidsLeisure = [
  { name:'Mini Siam',       date:'01.01.2026', coords:{lat:12.955415713554308,lng:100.90885349381693}, tips:'–ü–∞—Ä–∫ –º–∏–Ω–∏–∞—Ç—é—Ä –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º, –≤–æ–∑—å–º–∏—Ç–µ –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä.', type:'sight' },
  { name:'–î–µ—Ä–µ–≤–Ω—è —Å–ª–æ–Ω–æ–≤',  date:'04.01.2026', coords:{lat:12.916042985773633,lng:100.93883440612971}, tips:'–ö–æ—Ä–º–ª–µ–Ω–∏–µ —Å–ª–æ–Ω–æ–≤ –∏ –∫–∞—Ç–∞–Ω–∏–µ –Ω–∞ –Ω–∏—Ö. –£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞.', type:'sight' },
  { name:'–î–µ–ª—å—Ñ–∏–Ω–∞—Ä–∏—É–º',    date:'07.01.2026', coords:{lat:12.952221913414467,lng:100.93617556805272}, tips:'–®–æ—É –¥–µ–ª—å—Ñ–∏–Ω–æ–≤ –≤ 15:00. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ 15 –º–∏–Ω –¥–æ –Ω–∞—á–∞–ª–∞.', type:'sight' },
  { name:'–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á',    date:'11.01.2026', coords:{lat:12.76575857856688,lng:100.93505629196102}, tips:'–ù–∞–π–¥–∏—Ç–µ —à–æ—É —Å–ª–æ–Ω–æ–≤ –∏ —Å–∞–¥ –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ —É—Ç—Ä–æ–º.', type:'sight' },
  { name:'–ú—É–∑–µ–π –∏—Å–∫—É—Å—Å—Ç–≤ 3D',date:'13.01.2026', coords:{lat:12.948323220229895,lng:100.88976287787469}, tips:'–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ç–æ–∑–æ–Ω—ã, –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –¥–µ—Ç–µ–π.', type:'sight' },
  { name:'–ê—é—Ç—Ç–∞–π—è',         date:'16.01.2026', coords:{lat:14.357419046191445,lng:100.5675751166289}, tips:'–≠–∫—Å–∫—É—Ä—Å–∏—è —Å –≥–∏–¥–æ–º –∏ –ª–æ–¥–∫–æ–π, –≤–æ–∑—å–º–∏—Ç–µ –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä.', type:'sight' },
  { name:'–ó–æ–æ–ø–∞—Ä–∫ –ö—Ö–∞–æ –ö—Ö–µ–æ',date:'19.01.2026', coords:{lat:13.21500643700206,lng:101.0570009938234}, tips:'–ê–≤—Ç–æ–±—É—Å –ø–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, –∫–æ—Ä–º–ª–µ–Ω–∏–µ –∂–∏—Ä–∞—Ñ–æ–≤ –≤ 15:00.', type:'sight' },
  { name:'–ü–ª–∞–≤—É—á–∏–π —Ä—ã–Ω–æ–∫',   date:'22.01.2026', coords:{lat:12.867993764217232,lng:100.90469403957914}, tips:'–ö—É–ø–∏—Ç–µ —Ñ—Ä—É–∫—Ç—ã —É –ª–æ–¥–æ—á–Ω–∏–∫–æ–≤ –∏ –∞—Ä–µ–Ω–¥—É–π—Ç–µ –ª–æ–¥–∫—É.', type:'sight' },
  { name:'–•–æ–ª–º –ü—Ä–∞—Ç–∞–º–Ω–∞–∫',   date:'25.01.2026', coords:{lat:12.920748620113667,lng:100.86674393868198}, tips:'–õ—É—á—à–∏–µ –≤–∏–¥—ã –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∑–∞–∫–∞—Ç–µ, –≤–æ–∑—å–º–∏—Ç–µ –≤–æ–¥—É.', type:'sight' }
];

function generateBeachDays() {
  const used = kidsLeisure.map(x=>x.date);
  const days=[];
  const start=new Date('2026-01-01'), end=new Date('2026-01-26');
  for(let d=new Date(start);d<=end;d.setDate(d.getDate()+1)){
    const date=d.toLocaleDateString('ru-RU');
    if(!used.includes(date)){
      days.push({
        type:'sea',
        name:'–ü–ª—è–∂–∏–Ω–≥ –∏ –ü—Ä–æ–≥—É–ª–∏–Ω–≥',
        date,
        coords:null,
        tips:'–û—Ç–¥—ã—Ö –Ω–∞ –ø–ª—è–∂–µ –∏ –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –Ω–∞–±–µ—Ä–µ–∂–Ω–æ–π –ù–∞–∫–ª—É–∞.'
      });
    }
  }
  return days;
}

const activities=[...generateBeachDays(),...kidsLeisure].sort((a,b)=>{
  const da=a.date.split('.').reverse().join('-');
  const db=b.date.split('.').reverse().join('-');
  return new Date(da)-new Date(db);
});

const startTrip=new Date('2026-01-01'), endTrip=new Date('2026-01-26');
function updateCountdown(){
  const now=new Date(), label=now<startTrip?'–î–æ –ø–æ–µ–∑–¥–∫–∏:':now<=endTrip?'–î–æ –æ—Ç—ä–µ–∑–¥–∞:':'–ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!';
  const days= now<startTrip?Math.ceil((startTrip-now)/864e5):now<=endTrip?Math.ceil((endTrip-now)/864e5):0;
  document.getElementById('countdownText').textContent=label;
  document.getElementById('days').textContent=days>0?days:'‚úî';
  document.querySelector('.countdown-label').textContent=days>0?'–¥–Ω–µ–π':'';
}

function renderActivities(list){
  const grid=document.getElementById('activitiesGrid');
  grid.innerHTML=list.map(a=>`
    <div class="card">
      <h3>${a.name}</h3>
      <p>${a.date}</p>
      <button data-name="${a.name}" data-date="${a.date}" class="details">‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
    </div>
  `).join('');
  document.querySelectorAll('.details').forEach(btn=>{
    btn.addEventListener('click',()=>{
      const act=activities.find(x=>x.name===btn.dataset.name&&x.date===btn.dataset.date);
      showModal(act);
    });
  });
}

function showModal(a){
  let route='';
  if(a.coords){
    const from=`${homeCoords.lat},${homeCoords.lng}`,to=`${a.coords.lat},${a.coords.lng}`;
    route=`<p>üó∫Ô∏è <a href="https://www.google.com/maps/dir/${from}/${to}" target="_blank">–ú–∞—Ä—à—Ä—É—Ç</a></p>`;
  }
  document.getElementById('modalBody').innerHTML=`
    <h2>${a.name}</h2>
    <p>${a.date}</p>
    ${route}
    <p>üí° –°–æ–≤–µ—Ç: ${a.tips}</p>
  `;
  document.getElementById('modalOverlay').classList.add('active');
}

function initTabs(){
  document.querySelectorAll('.tabs button').forEach(btn=>{
    btn.addEventListener('click',()=>{
      document.querySelector('.tabs .active').classList.remove('active');
      btn.classList.add('active');
      document.querySelector('.tab-content.active').classList.remove('active');
      document.getElementById(btn.dataset.tab).classList.add('active');
    });
  });
}

function initFilters(){
  document.querySelectorAll('.filters button').forEach(f=>{
    f.addEventListener('click',()=>{
      document.querySelectorAll('.filters .active').forEach(x=>x.classList.remove('active'));
      f.classList.add('active');
      const filt=f.dataset.filter;
      const filtered = filt==='all'?activities:activities.filter(a=>a.type===filt);
      renderActivities(filtered);
      localStorage.setItem('filter',filt);
    });
  });
  const saved=localStorage.getItem('filter')||'all';
  document.querySelector(`.filters button[data-filter="${saved}"]`).click();
}

function closeModal(){
  document.getElementById('modalOverlay').classList.remove('active');
}

document.addEventListener('DOMContentLoaded',()=>{
  updateCountdown(); setInterval(updateCountdown,3600000);
  initTabs(); initFilters(); renderActivities(activities);
  document.getElementById('closeModal').addEventListener('click',closeModal);
});
